-- @path MMJava=/MDA_ATL_UWE/Metamodel/Java.ecore
-- @nsURI MMDatabase=http://database/1.0

module Db2Java;
create OUT : MMJava from IN : MMDatabase;

helper context MMDatabase!Table def : getAllColumns () : OrderedSet(MMDatabase!Column) =
	self.TableColumn->iterate( child ; cols : OrderedSet(MMDatabase!Column) = 
		OrderedSet{} | 
			cols.append(child)
		)
	;

rule Table2Class{
	from
		table : MMDatabase!Table
	to
		class : MMJava!Class(
			name <- table.Name,	
			members <- table.getAllColumns()
		)		
}

rule Column2Field{
	from
		col : MMDatabase!Column
	to
		fld : MMJava!Field(
			name <- col.Name,
			type <- thisModule.Type2PrimitiveType(col.Type.toString())
		)
}

unique lazy rule Type2PrimitiveType{
	from
		s : String
	to
		t : MMJava!PrimitiveType(
			name <- s	
		)
}